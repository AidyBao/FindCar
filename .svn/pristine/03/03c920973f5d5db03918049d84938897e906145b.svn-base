//
//  ZXTaskDetailViewController+Table.swift
//  FindCar
//
//  Created by screson on 2018/1/3.
//  Copyright © 2018年 screson. All rights reserved.
//

import UIKit

extension ZXTaskDetailViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        switch indexPath.section {
        case 0:
            switch indexPath.row {
            case 0: return 55
            case 1: return 60
            case 2: return 70
            default:
                break
            }
        case 1: return ZXTaskTableViewCell.height
        case 2: return 0//只有Header
        case 3: return ZXUploadedSingleImageCell.height//交接单
        case 4...7://车辆图片（验证的车辆信息）
            return ZXUploadedMultiImageCell.height
        case 8...11://地址 联系人备注
            if indexPath.section == 8 || indexPath.section == 11{//地址 备注
                return UITableViewAutomaticDimension
            }
            return ZXUploadedTextInfoCell.height
        case 12...15://授权书 车辆图片（上传的车辆信息）
            return ZXUploadedMultiImageCell.height
        case 16: return UITableViewAutomaticDimension//备注（上传的车辆信息）
        case 17: return 0//只有Footer
        default:
            break
        }
        return 0
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        switch section {
        case 0: return 20
        case 1: return 20
        case 2: return 55//只有Header
        case 3,4: return 40//交接单 验证车辆信息
        case 5...7: return CGFloat.leastNormalMagnitude//车辆图片（验证的车辆信息）
        case 8...11: return CGFloat.leastNormalMagnitude //地址 联系人备注
        case 12: return 40 //授权书
        case 13: return 40 //（上传的车辆信息）
        case 14...16: return CGFloat.leastNormalMagnitude//车辆图片 备注（上传的车辆信息）
        case 17: return CGFloat.leastNormalMagnitude//只有Footer 展开 收起
        default:
            break
        }

        return CGFloat.leastNormalMagnitude
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        switch section {
        case 0: break
        case 1: return 20//展开 收起
        case 17: return 40//展开 收起 只有Footer
        default:
            break
        }
        return CGFloat.leastNormalMagnitude
    }
}

extension ZXTaskDetailViewController: UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        let header = tableView.dequeueReusableHeaderFooterView(withIdentifier: ZXUploadedHeader.reuseIdentifier) as! ZXUploadedHeader
        header.lbTitle.text = ""
        header.lbSubTitle.text = ""
        header.lbLine.isHidden = true
        switch section {
        case 2://已传信息
            header.lbTitle.text = "已传信息"
            header.lbLine.isHidden = false
            return header
        case 3://车辆交接 时间
            header.lbTitle.text = "车辆交接"
            header.lbSubTitle.text = "18-18 15:23"
            return header
        case 4://（验证的车辆信息）
            header.lbTitle.text = "验证车辆信息"
            return header
        case 12://授权书
            header.lbTitle.text = "获取授权"
            return header
        case 13://（上传的车辆信息）
            header.lbTitle.text = "补充车辆信息"
            return header
        default:
            break
        }

        return nil
    }
    
    func tableView(_ tableView: UITableView, viewForFooterInSection section: Int) -> UIView? {
        return nil
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        switch indexPath.section {
        case 0:
            switch indexPath.row {
            case 0://状态 剩余时间
                let cell = tableView.dequeueReusableCell(withIdentifier: ZXTaskStatusHeaderCell.reuseIdentifier, for: indexPath) as! ZXTaskStatusHeaderCell
                cell.reloadData(model: self.taskModel)
                return cell
            case 1://待审核、已被领取 附加文字说明
                let cell = tableView.dequeueReusableCell(withIdentifier: ZXTaskStatusInfoTextCell.reuseIdentifier, for: indexPath) as! ZXTaskStatusInfoTextCell
                return cell
            case 2://任务进度
                let cell = tableView.dequeueReusableCell(withIdentifier: ZXTaskStatusProgressCell.reuseIdentifier, for: indexPath) as! ZXTaskStatusProgressCell
                cell.reloadProgress(list: taskModel?.zx_progressColorList)
                return cell
            default : break
            }
        case 1://任务基本信息
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXTaskTableViewCell.reuseIdentifier, for: indexPath) as! ZXTaskTableViewCell
            cell.reloadData(model: self.taskModel, inDetail: true)
            return cell
        case 2: break//只有Header
        case 3://交接单
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXUploadedSingleImageCell.reuseIdentifier, for: indexPath) as! ZXUploadedSingleImageCell
            cell.lbTitle.text = "点击查看交接单"
            return cell
        case 4...7://车辆图片（验证的车辆信息）
            //if multi image
            // else
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXUploadedMultiImageCell.reuseIdentifier, for: indexPath) as! ZXUploadedMultiImageCell
            cell.lbTitle.text = ""
            switch indexPath.section {
            case 4: cell.lbTitle.text = "车辆正面照片"
            case 5: cell.lbTitle.text = "驾驶室照片 (车门打开45˚状态)"
            case 6: cell.lbTitle.text = "车辆中控照片"
            case 7: cell.lbTitle.text = "车辆尾部照片"
            default: break
            }
            return cell
        case 8...11://地址 联系人备注
            //if multi image
            // else
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXUploadedTextInfoCell.reuseIdentifier, for: indexPath) as! ZXUploadedTextInfoCell
            cell.lbTitle.text = ""
            cell.lbDetailInfo.text = ""
            switch indexPath.section {
            case 8:
                cell.lbTitle.text = "提车地址"
                cell.lbDetailInfo.text = "发的哈时间看来花费巨大分段函数就卡了复合地基看撒谎附近地块啦撒复合地基开始啦回家喽风华绝代卡萨了"
            case 9:
                cell.lbTitle.text = "联系人"
                cell.lbDetailInfo.text = "孙先生"
            case 10:
                cell.lbTitle.text = "联系方式"
                cell.lbDetailInfo.text = "180 8100 0000"
            case 11:
                cell.lbTitle.text = "备注"
                cell.lbDetailInfo.text = "4把钥匙 5个轮胎 烦得很健身卡恢复和辅导教师卡厉害放接口登录撒谎复合地基可拉伸"
            default: break
            }
            return cell
        case 12...15://授权书 车辆图片（上传的车辆信息）
            //if multi image
            // else
            
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXUploadedMultiImageCell.reuseIdentifier, for: indexPath) as! ZXUploadedMultiImageCell
            cell.lbTitle.text = ""
            switch indexPath.section {
            case 12: cell.lbTitle.text = "点击查看授权书"
            case 13: cell.lbTitle.text = "车辆车架号照片"
            case 14: cell.lbTitle.text = "车头或车尾照片"
            case 15: cell.lbTitle.text = "重大问题照片"
            default: break
            }

            return cell
        case 16://备注（上传的车辆信息）
            //if multi image
            // else
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXUploadedTextInfoCell.reuseIdentifier, for: indexPath) as! ZXUploadedTextInfoCell
            cell.lbTitle.text = "备注"
            cell.lbDetailInfo.text = "4把钥匙 5个轮胎 烦得很健身卡恢复和辅导教师卡厉害放接口登录撒谎复合地基可拉伸"

            return cell
        case 17: break//只有Footer
        default:
            break
        }
        return UITableViewCell.init()
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        switch section {
        case 0://状态
            return 3
        case 1://基本信息
            return 1
        case 2://已传信息
            return 0//只有Header
        case 3...16:
            return 1
        case 17:
            return 0//只有Footer 用于控制展开操作
        default:
            return 0
        }
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        if taskModel != nil {
            return 18
        }
        return 0
    }
}
