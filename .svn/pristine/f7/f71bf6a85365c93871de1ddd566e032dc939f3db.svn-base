//
//  ZXDefaultView.swift
//  FindCar
//
//  Created by 120v on 2018/1/3.
//  Copyright © 2018年 screson. All rights reserved.
//

import UIKit

typealias ZXDefaultViewBlock = (ZXDefaultView, Int) -> Void

class ZXDefaultView: UIView {
    @IBOutlet weak var toolView: UIView!
    @IBOutlet weak var defaultBtn: UIButton!
    @IBOutlet weak var agencyBtn: UIButton!
    @IBOutlet weak var newIssueBtn: UIButton!
    @IBOutlet weak var toolViewH: NSLayoutConstraint!
    var block: ZXDefaultViewBlock?
    
    static func loadNib() -> ZXDefaultView{
        let nibView:ZXDefaultView = Bundle.main.loadNibNamed("ZXDefaultView", owner: self, options: nil)?.first as! ZXDefaultView
        return nibView
    }
    
    override init(frame: CGRect) {
        super.init(frame: frame)
        
        self.backgroundColor = UIColor.black.withAlphaComponent(0.3)
        
        self.setAnima()
        
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        
        self.backgroundColor = UIColor.black.withAlphaComponent(0.3)
    }
    
    
    override func awakeFromNib() {
        super.awakeFromNib()
        
        self.backgroundColor = UIColor.black.withAlphaComponent(0.3)
        
        self.setAnima()
        
    }
    
    override func layoutSubviews() {
        super.layoutSubviews()
        self.frame = CGRect.init(x: 0, y: self.frame.origin.y, width: self.frame.size.width, height: self.frame.size.height)
        
        self.toolView.frame = CGRect.init(x: 0, y: 0, width: self.frame.size.width, height: 44)
    }
    
    func setAnima() {
        self.toolViewH.constant = 0
        self.toolView.alpha = 0
        UIView.animate(withDuration: 0.35, animations: {
            self.toolViewH.constant = 44.0
            self.toolView.alpha = 1.0
        }) { (finish) in
            self.alpha = 1.0
        }
    }
    
    @IBAction func toolBtnAction(_ sender: UIButton) {
        if block != nil {
            block?(self,sender.tag)
        }
    }
    
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        super.touchesBegan(touches, with: event)
        
        if block != nil {
            block?(self,0)
        }
        
        self.dismiss()
    }
    
    func dismiss() {
        
        self.toolViewH.constant = 44
        self.toolView.alpha = 1
        UIView.animate(withDuration: 0.35, animations: {
            self.toolViewH.constant = 0.0
            self.toolView.alpha = 0.0
        }) { (finish) in
            self.alpha = 0.0
        }
        
        self.removeFromSuperview()
    }
}
