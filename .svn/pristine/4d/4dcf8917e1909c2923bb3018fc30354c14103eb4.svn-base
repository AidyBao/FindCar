//
//  ZXTaskDetailViewController.swift
//  FindCar
//
//  Created by screson on 2018/1/3.
//  Copyright © 2018年 screson. All rights reserved.
//

import UIKit

class ZXTaskDetailViewController: ZXUIViewController {

    var taskModel: ZXTaskModel?
    var taskId: String?
    
    fileprivate var fetchId: String? {
        get {
            return taskId ?? self.taskModel?.taskId
        }
    }
    
    @IBOutlet weak var tblList: UITableView!
    
    @IBOutlet weak var bottomControlView: UIView!
    @IBOutlet weak var btnBackToHome: UIButton!
    @IBOutlet weak var btnUploadInfo: UIButton!
    
    @IBOutlet weak var btnBigBackToHome: UIButton!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "任务详情"
        self.view.backgroundColor = UIColor.zx_subTintColor

        self.bottomControlView.isHidden = true
        self.btnBackToHome.titleLabel?.font = UIFont.zx_titleFont
        self.btnBackToHome.setTitleColor(UIColor.zx_textColorMark, for: .normal)
        self.btnBackToHome.layer.shadowRadius = 5
        self.btnBackToHome.layer.cornerRadius = 23
        self.btnBackToHome.backgroundColor = .white
        self.btnBackToHome.layer.shadowOffset = CGSize(width: 0, height: 5)
        self.btnBackToHome.layer.shadowOpacity = 0.3
        
        self.btnBigBackToHome.titleLabel?.font = UIFont.zx_titleFont
        self.btnBigBackToHome.setTitleColor(UIColor.zx_textColorMark, for: .normal)
        self.btnBigBackToHome.layer.shadowRadius = 5
        self.btnBigBackToHome.layer.cornerRadius = 23
        self.btnBigBackToHome.backgroundColor = .white
        self.btnBigBackToHome.layer.shadowOffset = CGSize(width: 0, height: 5)
        self.btnBigBackToHome.layer.shadowOpacity = 0.3
        
        self.btnBigBackToHome.isHidden = true
        self.btnBackToHome.isHidden = true
        self.btnUploadInfo.isHidden = true


        self.btnUploadInfo.titleLabel?.font = UIFont.zx_titleFont
        self.btnUploadInfo.setTitleColor(.white, for: .normal)
        
        // Do any additional setup after loading the view.
        self.tblList.showsVerticalScrollIndicator = false
        self.tblList.rowHeight = UITableViewAutomaticDimension
        self.tblList.estimatedRowHeight = 60

        self.tblList.backgroundColor = UIColor.zx_subTintColor
        self.tblList.register(UINib.init(nibName: ZXTaskStatusHeaderCell.NibName, bundle: nil), forCellReuseIdentifier: ZXTaskStatusHeaderCell.reuseIdentifier)//状态
        self.tblList.register(UINib.init(nibName: ZXTaskStatusInfoTextCell.NibName, bundle: nil), forCellReuseIdentifier: ZXTaskStatusInfoTextCell.reuseIdentifier)//审核说明
        self.tblList.register(UINib.init(nibName: ZXTaskStatusProgressCell.NibName, bundle: nil), forCellReuseIdentifier: ZXTaskStatusProgressCell.reuseIdentifier)//任务进度
        self.tblList.register(UINib.init(nibName: ZXTaskTableViewCell.NibName, bundle: nil), forCellReuseIdentifier: ZXTaskTableViewCell.reuseIdentifier)//任务基本信息
        //任务上传信息
        self.tblList.register(UINib.init(nibName: ZXUploadedMultiImageCell.NibName, bundle: nil), forCellReuseIdentifier: ZXUploadedMultiImageCell.reuseIdentifier)//
        self.tblList.register(UINib.init(nibName: ZXUploadedTextInfoCell.NibName, bundle: nil), forCellReuseIdentifier: ZXUploadedTextInfoCell.reuseIdentifier)//文本信息
        
        //下拉刷新
        self.tblList.zx_addHeaderRefresh(showGif: true, target: self, action: #selector(zx_refresh))
        
        //
        self.tblList.register(UINib.init(nibName: ZXUploadedHeader.NibName, bundle: nil), forHeaderFooterViewReuseIdentifier: ZXUploadedHeader.reuseIdentifier)
        
        if self.fetchId == nil {
            ZXEmptyView.show(in: self.view, type: .noData, text: "无任务详情数据", subText: nil)
        } else {
            if self.taskModel == nil {
                self.fetchData()
            } else {
                self.reloadUIAction()
            }
        }
        
        //
        self.zx_addNavBarButtonItems(imageNames: ["more"], useOriginalColor: false, at: .right)
        
    }
    
    override func zx_refresh() {
        self.fetchData(false)
    }
    
    override func zx_rightBarButtonAction(index: Int) {
        print("收藏、分享")
    }
    
    fileprivate func fetchData(_ showHUD: Bool = true) {
        if showHUD {
            ZXHUD.showLoading(in: self.view, text: ZX_LOADING_TEXT, delay: 0)
        }
        if let fetchId = self.fetchId {
            ZXTaskViewModel.detailInfo(taskId: fetchId, completion: { (success, code, taskModel, errorMsg) in
                self.tblList.mj_header.endRefreshing()
                ZXHUD.hide(for: self.view, animated: true)
                if success {
                    self.taskModel = taskModel
                    self.reloadUIAction()
                } else {
                    ZXHUD.showFailure(in: self.view, text: errorMsg, delay: ZXHUD.DelayTime)
                }
            })
        }
    }
    
    fileprivate func reloadUIAction() {
        self.tblList.reloadData()
        self.bottomControlView.isHidden = true
        self.btnBigBackToHome.isHidden = true
        self.btnBackToHome.isHidden = true
        self.btnUploadInfo.isHidden = true
        //button
        if let model = taskModel {
            self.bottomControlView.isHidden = false
            if !model.otherMatched {
                if model.zx_controlType == .none {
                    self.btnBigBackToHome.isHidden = false
                } else {
                    self.btnBackToHome.isHidden = false
                    self.btnUploadInfo.isHidden = false
                    self.btnUploadInfo.setTitle(model.zx_controlType.description(), for: .normal)
                }
            } else {
                self.btnBigBackToHome.isHidden = false
            }
        }
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.setNavigationBarHidden(false, animated: true)
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        if !onceLoad {
           self.fetchData(false)
        } else {
            self.onceLoad = true
        }
    }
    
    
    @IBAction func backToHome(_ sender: Any) {
        self.navigationController?.popViewController(animated: true)
    }
    
    @IBAction func uploadInfoAction(_ sender: Any) {
        if let model = taskModel {
            switch model.zx_controlType {
            case .uploadCarInfo://上传车辆信息
                let uploadCarInfoVC = ZXUploadCarInfoViewController()
                uploadCarInfoVC.taskId = self.fetchId
                self.navigationController?.pushViewController(uploadCarInfoVC, animated: true)
            case .verifyCarInfo://验证车辆信息
                let verifyCarInfoVC = ZXVerifyCarInfoViewController()
                verifyCarInfoVC.taskId = self.fetchId
                self.navigationController?.pushViewController(verifyCarInfoVC, animated: true)
            case .handOverCar://交接车辆
                let verifyGetCarCode = ZXInputGetCarCodeViewController()
                verifyGetCarCode.taskId = self.fetchId
                self.navigationController?.pushViewController(verifyGetCarCode, animated: true)
            case .uploadSheet://上传交接单
                let uploadHandOverSheet = ZXUploadTakeOverSheetViewController()
                uploadHandOverSheet.taskId = self.fetchId
                self.navigationController?.pushViewController(uploadHandOverSheet, animated: true)
            default:
                break
            }
        } else {
            ZXHUD.showFailure(in: self.view , text: "无可操作数据", delay: ZXHUD.DelayTime)
        }
    }
}
